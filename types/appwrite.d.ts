import type { Models } from 'appwrite';

// This file is auto-generated by the Appwrite CLI. 
// You can regenerate it by running `appwrite types types/`.

export enum Status {
    DRAFT = "draft",
    PUBLISHED = "published",
    ARCHIVED = "archived"
}

export enum TargetType {
    NOTE = "note",
    COMMENT = "comment"
}

export enum Permission {
    READ = "read",
    WRITE = "write",
    ADMIN = "admin"
}

export enum Cause {
    MANUAL = "manual",
    AI = "ai",
    COLLAB = "collab"
}

export enum Plan {
    FREE = "free",
    PRO = "pro",
    ORG = "org"
}

export enum Status {
    ACTIVE = "active",
    CANCELED = "canceled",
    TRIALING = "trialing"
}

export type Users = Models.Row & {
    id: string | null;
    email: string | null;
    name: string | null;
    walletAddress: string | null;
    createdAt: string | null;
    updatedAt: string | null;
}

export type Notes = Models.Row & {
    id: string | null;
    createdAt: string | null;
    updatedAt: string | null;
    userId: string | null;
    isPublic: boolean | null;
    status: Status | null;
    parentNoteId: string | null;
    title: string | null;
    content: string | null;
    tags: string[] | null;
    comments: string[] | null;
    extensions: string[] | null;
    collaborators: string[] | null;
    metadata: string | null;
}

export type Tags = Models.Row & {
    id: string | null;
    name: string | null;
    notes: string[] | null;
    createdAt: string | null;
    color: string | null;
    description: string | null;
    usageCount: number | null;
    userId: string | null;
    nameLower: string | null;
}

export type ApiKeys = Models.Row & {
    id: string | null;
    key: string | null;
    name: string | null;
    userId: string | null;
    createdAt: string | null;
    lastUsed: string | null;
    expiresAt: string | null;
    scopes: string[] | null;
    lastUsedIp: string | null;
    keyHash: string | null;
}

export type Comments = Models.Row & {
    noteId: string;
    userId: string;
    content: string;
    createdAt: string;
    parentCommentId: string | null;
}

export type Extensions = Models.Row & {
    name: string;
    description: string | null;
    version: string | null;
    authorId: string | null;
    enabled: boolean | null;
    settings: string | null;
    createdAt: string | null;
    updatedAt: string | null;
    isPublic: boolean | null;
}

export type Reactions = Models.Row & {
    targetType: TargetType;
    emoji: string;
    createdAt: string;
    targetId: string;
    userId: string;
}

export type Collaborators = Models.Row & {
    noteId: string;
    userId: string;
    permission: Permission;
    invitedAt: string | null;
    accepted: boolean | null;
}

export type ActivityLog = Models.Row & {
    userId: string;
    action: string;
    targetType: string;
    targetId: string;
    timestamp: string;
    details: string | null;
}

export type Settings = Models.Row & {
    userId: string;
    settings: string;
    createdAt: string | null;
    updatedAt: string | null;
    mode: string | null;
}

export type WalletMap = Models.Row & {
    walletAddressLower: string;
    userId: string;
    updatedAt: string | null;
}

export type NoteTags = Models.Row & {
    noteId: string;
    tagId: string;
    userId: string;
    createdAt: string | null;
    tag: string | null;
}

export type NoteRevisions = Models.Row & {
    noteId: string;
    revision: number;
    userId: string | null;
    title: string | null;
    content: string | null;
    createdAt: string | null;
    diff: string | null;
    diffFormat: string | null;
    fullSnapshot: boolean | null;
    cause: Cause | null;
}

export type AiGenerations = Models.Row & {
    userId: string;
    promptHash: string | null;
    prompt: string | null;
    mode: string | null;
    providerId: string | null;
    model: string | null;
    durationMs: number | null;
    tokensUsed: number | null;
    success: boolean | null;
    error: string | null;
    createdAt: string | null;
}

export type Subscriptions = Models.Row & {
    userId: string;
    plan: Plan;
    status: Status | null;
    currentPeriodStart: string | null;
    currentPeriodEnd: string | null;
    seats: number | null;
    createdAt: string | null;
    updatedAt: string | null;
}

export type Credentials = Models.Row & {
    userId: string;
    itemType: string;
    name: string;
    url: string | null;
    username: string | null;
    password: string | null;
    notes: string | null;
    totpId: string | null;
    cardNumber: string | null;
    cardholderName: string | null;
    cardExpiry: string | null;
    cardCVV: string | null;
    cardPIN: string | null;
    cardType: string | null;
    folderId: string | null;
    tags: string[] | null;
    customFields: string | null;
    faviconUrl: string | null;
    isFavorite: boolean;
    isDeleted: boolean;
    deletedAt: string | null;
    lastAccessedAt: string | null;
    passwordChangedAt: string | null;
    createdAt: string | null;
    updatedAt: string | null;
}

export type TotpSecrets = Models.Row & {
    userId: string;
    issuer: string;
    accountName: string;
    secretKey: string;
    algorithm: string;
    digits: number;
    period: number;
    url: string | null;
    folderId: string | null;
    tags: string[] | null;
    isFavorite: boolean;
    isDeleted: boolean;
    deletedAt: string | null;
    lastUsedAt: string | null;
    createdAt: string | null;
    updatedAt: string | null;
}

export type Identities = Models.Row & {
    userId: string;
    identityType: string;
    label: string;
    credentialId: string | null;
    publicKey: string | null;
    counter: number;
    passkeyBlob: string | null;
    transports: string[] | null;
    aaguid: string | null;
    deviceInfo: string | null;
    isPrimary: boolean;
    isBackup: boolean;
    lastUsedAt: string | null;
    createdAt: string | null;
    updatedAt: string | null;
}

export type Folders = Models.Row & {
    userId: string;
    name: string;
    parentFolderId: string | null;
    icon: string | null;
    color: string | null;
    sortOrder: number;
    isDeleted: boolean;
    deletedAt: string | null;
    createdAt: string | null;
    updatedAt: string | null;
}

export type SecurityLogs = Models.Row & {
    userId: string;
    eventType: string;
    ipAddress: string | null;
    userAgent: string | null;
    deviceFingerprint: string | null;
    details: string | null;
    success: boolean;
    severity: string;
    timestamp: string;
}

export type User = Models.Row & {
    userId: string;
    email: string | null;
    masterpass: boolean | null;
    check: string | null;
    salt: string | null;
    twofa: boolean | null;
    twofaSecret: string | null;
    backupCodes: string | null;
    isPasskey: boolean | null;
    passkeyBlob: string | null;
    credentialId: string | null;
    publicKey: string | null;
    counter: number | null;
    authVersion: number;
    v2Migrated: boolean;
    mustCreatePasskey: boolean;
    sessionFingerprint: string | null;
    lastLoginAt: string | null;
    lastPasswordChangeAt: string | null;
    createdAt: string | null;
    updatedAt: string | null;
}
